from aiogram import Bot, types
import api
import config
from handlers.admin import admin_kb
from handlers.user import user_kb
from loader import dp, bot
from utils import States


@dp.message_handler(commands=['start'], state='*')
async def process_start_command(message: types.Message):
    state = dp.current_state(user=message.from_user.id)  # take current state of user
    await state.set_state(States.UNAUTHORIZED_STATE[0])
    button1 = types.InlineKeyboardButton(text='üì≤ –°–≤—è–∑–∞—Ç—å—Å—è', url='https://t.me/'+config.SUPPORT)
    buttons_ = [button1]
    keyboard = types.InlineKeyboardMarkup(row_width=1)
    keyboard.add(*buttons_)

    await message.answer("<b>B2B service</b> –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω—ã—Ö —Å–¥–µ–ª–æ–∫ —Å –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞–º–∏.\n\n"
                         "–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å –Ω–∞—à–∏–º –º–µ—Ä—á–∞–Ω—Ç–æ–º –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—Ç—å —Å–≤–æ–∏ —É—Å–ª—É–≥–∏ –æ–±–º–µ–Ω–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π.\n\n"
                         "<b>–î–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤–≤–µ–¥–∏—Ç–µ —Ç–æ–∫–µ–Ω</b>", reply_markup=keyboard, parse_mode=types.ParseMode.HTML)


# Authorization works only in UNAUTHORIZED state
@dp.message_handler(state=States.UNAUTHORIZED_STATE)
async def authorization(msg: types.Message):
    global u_token
    u_token = msg.text
    tg_id = msg.from_user.id

    state = dp.current_state(user=msg.from_user.id)  # take current state

    if api.check_token(u_token, str(tg_id)) == 'user':
        await state.set_state(States.USER_STATE[0])
        await msg.answer("–í—ã —É—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–ª–∏—Å—å!", reply_markup=user_kb)
    elif api.check_token(u_token, str(tg_id)) == 'admin':
        await state.set_state(States.ADMIN_STATE)
        await msg.answer("–í—ã —É—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–ª–∏—Å—å!", reply_markup=admin_kb)
    else:
        await msg.answer("–ù–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω!")
        await state.set_state(States.UNAUTHORIZED_STATE[0])

